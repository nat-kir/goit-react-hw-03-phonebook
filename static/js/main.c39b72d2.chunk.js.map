{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Form/Form.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","ContactItem","name","number","deleteContact","button","type","onClick","ContactList","contacts","onDeleteContact","List","map","id","ListItem","key","Form","state","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","alert","form","autoComplete","this","label","labelName","required","input","placeholder","onChange","Component","Filter","App","filter","contactId","prevState","contact","addContact","newContact","uuidv4","some","toLowerCase","filterContacts","getFilteredContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c39b72d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"labelName\":\"Form_labelName__2L7Gh\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__20gyh\",\"ListItem\":\"ContactList_ListItem__vxGfb\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"labelName\":\"Filter_labelName__3VI7p\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactItem = ({ name, number, deleteContact }) => {\n  return (\n    <>\n      <p>\n        {name} : {number}\n      </p>\n      <button className={styles.button} type=\"button\" onClick={deleteContact}>\n        Удалить\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.List}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={styles.ListItem} key={id}>\n        <ContactItem\n          name={name}\n          number={number}\n          deleteContact={() => onDeleteContact(id)}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Form.module.css';\n\nclass Form extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    if (name === '') {\n      alert('Please, give a name for new contact');\n      return;\n    }\n    if (number === '') {\n      alert('Please, add a number');\n      return;\n    }\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form\n        className={styles.form}\n        autoComplete=\"off\"\n        onSubmit={this.handleSubmit}\n      >\n        <label className={styles.label}>\n          <p className={styles.labelName}>Name:&#42;</p>\n          <input\n            required\n            className={styles.input}\n            type=\"text\"\n            placeholder=\"ex. Anne Hathaway\"\n            value={this.state.name}\n            name=\"name\"\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label className={styles.label}>\n          <p className={styles.labelName}>Number:&#42;</p>\n          <input\n            required\n            className={styles.input}\n            type=\"number\"\n            placeholder=\"ex. 0532455678\"\n            value={this.state.number}\n            name=\"number\"\n            onChange={this.handleInputChange}\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      <p className={styles.labelName}>Find contact by name</p>\n      <input\n        className={styles.input}\n        type=\"text\"\n        placeholder=\"Name\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Container from './components/Container';\nimport ContactList from './components/ContactList';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport './index.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: '1', name: 'Brad Pitt', number: '0591234567' },\n      // { id: '2', name: 'Anne Hathaway', number: '0593452378' },\n      // { id: '3', name: 'Natalie Portman', number: '0595673427' },\n      // { id: '4', name: 'Salma Hayek', number: '0594567345' },\n      // { id: '5', name: 'George Clooney', number: '0594675189' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.some(contact => {\n        return name.toLowerCase() === contact.name.toLowerCase();\n      })\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    if (\n      contacts.some(contact => {\n        return number === contact.number;\n      })\n    ) {\n      alert(`This number ${number} is already in contacts`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  filterContacts = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Container>\n        <h2>Phonebook</h2>\n        <Form onSubmit={this.addContact} />\n        <Filter value={filter} onChange={this.filterContacts} />\n\n        <h2>Contacts</h2>\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}